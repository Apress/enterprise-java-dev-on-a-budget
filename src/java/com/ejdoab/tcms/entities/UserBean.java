package com.ejdoab.tcms.entities;

/**
 * A TCMS domain entity for table: USERS
 * Generated by Middlegen CMP2.0 Plugin 
 *
 * @author <a href="http://boss.bekk.no/boss/middlegen/">Middlegen</a>
 *
 *
 * @ejb.bean
 *    type="CMP"
 *    cmp-version="2.x"
 *    name="User"
 *    local-jndi-name="ejb.UserLocalHome"
 *    view-type="local"
 *    primkey-field="id"
 *
 * @ejb.finder
 *    signature="java.util.Collection findAll()"
 *    result-type-mapping="Local"
 *    method-intf="LocalHome"
 *    query="SELECT OBJECT(o) FROM User o"
 *
 * @ejb.finder
 *    signature="java.util.Collection findByPassword(java.lang.String password)"
 *    result-type-mapping="Local"
 *    method-intf="LocalHome"
 *    query="SELECT DISTINCT OBJECT(o) FROM User o WHERE o.password = ?1"
 *    description="PASSWORD is not indexed."
 *
 * @ejb.finder
 *    signature="java.util.Collection findByFirstName(java.lang.String firstName)"
 *    result-type-mapping="Local"
 *    method-intf="LocalHome"
 *    query="SELECT DISTINCT OBJECT(o) FROM User o WHERE o.firstName = ?1"
 *    description="FIRSTNAME is not indexed."
 *
 * @ejb.finder
 *    signature="java.util.Collection findByLastName(java.lang.String lastName)"
 *    result-type-mapping="Local"
 *    method-intf="LocalHome"
 *    query="SELECT DISTINCT OBJECT(o) FROM User o WHERE o.lastName = ?1"
 *    description="LASTNAME is not indexed."
 *
 * @ejb.finder
 *    signature="java.util.Collection findByEmail(java.lang.String email)"
 *    result-type-mapping="Local"
 *    method-intf="LocalHome"
 *    query="SELECT DISTINCT OBJECT(o) FROM User o WHERE o.email = ?1"
 *    description="EMAIL is indexed."
 *
 * @ejb.finder
 *    signature="java.util.Collection findByHomePhone(java.lang.String homePhone)"
 *    result-type-mapping="Local"
 *    method-intf="LocalHome"
 *    query="SELECT DISTINCT OBJECT(o) FROM User o WHERE o.homePhone = ?1"
 *    description="HOMEPHONE is not indexed."
 *
 * @ejb.finder
 *    signature="java.util.Collection findByWorkPhone(java.lang.String workPhone)"
 *    result-type-mapping="Local"
 *    method-intf="LocalHome"
 *    query="SELECT DISTINCT OBJECT(o) FROM User o WHERE o.workPhone = ?1"
 *    description="WORKPHONE is not indexed."
 *
 * @ejb.finder
 *    signature="java.util.Collection findByFax(java.lang.String fax)"
 *    result-type-mapping="Local"
 *    method-intf="LocalHome"
 *    query="SELECT DISTINCT OBJECT(o) FROM User o WHERE o.fax = ?1"
 *    description="FAX is not indexed."
 *
 * @ejb.persistence table-name="USERS"
 *
 * @weblogic.data-source-name $plugin.middlegen.middlegenTask.datasourceJNDIName
 */
public abstract class UserBean implements javax.ejb.EntityBean {

   /**
    * Returns the id
    * @todo support OracleClob,OracleBlob on WLS
    *
    * @return the id
    *
    * @ejb.pk-field
    * @ejb.interface-method view-type="local"
    * @ejb.persistence column-name="PK_ID"
    */
   public abstract java.lang.Integer getId();

   /**
    * Sets the id
    *
    * @param java.lang.Integer the new id value
    */
   public abstract void setId(java.lang.Integer id);

   /**
    * Returns the password
    * @todo support OracleClob,OracleBlob on WLS
    *
    * @return the password
    *
    * @ejb.interface-method view-type="local"
    * @ejb.persistence column-name="PASSWORD"
    */
   public abstract java.lang.String getPassword();

   /**
    * Sets the password
    *
    * @param java.lang.String the new password value
    * @ejb.interface-method view-type="local"
    */
   public abstract void setPassword(java.lang.String password);

   /**
    * Returns the firstName
    * @todo support OracleClob,OracleBlob on WLS
    *
    * @return the firstName
    *
    * @ejb.interface-method view-type="local"
    * @ejb.persistence column-name="FIRSTNAME"
    */
   public abstract java.lang.String getFirstName();

   /**
    * Sets the firstName
    *
    * @param java.lang.String the new firstName value
    * @ejb.interface-method view-type="local"
    */
   public abstract void setFirstName(java.lang.String firstName);

   /**
    * Returns the lastName
    * @todo support OracleClob,OracleBlob on WLS
    *
    * @return the lastName
    *
    * @ejb.interface-method view-type="local"
    * @ejb.persistence column-name="LASTNAME"
    */
   public abstract java.lang.String getLastName();

   /**
    * Sets the lastName
    *
    * @param java.lang.String the new lastName value
    * @ejb.interface-method view-type="local"
    */
   public abstract void setLastName(java.lang.String lastName);

   /**
    * Returns the email
    * @todo support OracleClob,OracleBlob on WLS
    *
    * @return the email
    *
    * @ejb.interface-method view-type="local"
    * @ejb.persistence column-name="EMAIL"
    */
   public abstract java.lang.String getEmail();

   /**
    * Sets the email
    *
    * @param java.lang.String the new email value
    * @ejb.interface-method view-type="local"
    */
   public abstract void setEmail(java.lang.String email);

   /**
    * Returns the homePhone
    * @todo support OracleClob,OracleBlob on WLS
    *
    * @return the homePhone
    *
    * @ejb.interface-method view-type="local"
    * @ejb.persistence column-name="HOMEPHONE"
    */
   public abstract java.lang.String getHomePhone();

   /**
    * Sets the homePhone
    *
    * @param java.lang.String the new homePhone value
    * @ejb.interface-method view-type="local"
    */
   public abstract void setHomePhone(java.lang.String homePhone);

   /**
    * Returns the workPhone
    * @todo support OracleClob,OracleBlob on WLS
    *
    * @return the workPhone
    *
    * @ejb.interface-method view-type="local"
    * @ejb.persistence column-name="WORKPHONE"
    */
   public abstract java.lang.String getWorkPhone();

   /**
    * Sets the workPhone
    *
    * @param java.lang.String the new workPhone value
    * @ejb.interface-method view-type="local"
    */
   public abstract void setWorkPhone(java.lang.String workPhone);

   /**
    * Returns the fax
    * @todo support OracleClob,OracleBlob on WLS
    *
    * @return the fax
    *
    * @ejb.interface-method view-type="local"
    * @ejb.persistence column-name="FAX"
    */
   public abstract java.lang.String getFax();

   /**
    * Sets the fax
    *
    * @param java.lang.String the new fax value
    * @ejb.interface-method view-type="local"
    */
   public abstract void setFax(java.lang.String fax);

   /**
    * This is a uni-directional one-to-many relationship CMR method
    *
    * @return the related com.ejdoab.tcms.entities.AddressLocal.
    *
    * @ejb.interface-method view-type="local"
    *
    * @ejb.relation
    *    name="ADDRESSES-cmp20-USERS-cmp20"
    *    role-name="USERS-cmp20-has-ADDRESSES-cmp20"
    *    target-ejb="Address"
    *    target-role-name="ADDRESSES-cmp20-has-USERS-cmp20"
    *    target-multiple="yes"
    *
    * @jboss.relation-mapping style="foreign-key"
    *
    * @weblogic.column-map
    *    foreign-key-column="FK_ADDRESSID"
    *    key-column="PK_ID"
    *
    * @jboss.relation
    *    fk-constraint="true"
    *    fk-column="FK_ADDRESSID"
    *    related-pk-field="id"
    *
    */
   public abstract com.ejdoab.tcms.entities.AddressLocal getAddress();

   /**
    * Sets the related com.ejdoab.tcms.entities.AddressLocal
    *
    * @param com.ejdoab.tcms.entities.UserLocal the related $target.variableName
    *
    * @ejb.interface-method view-type="local"
    *
    * @param address the new CMR value
    */
   public abstract void setAddress(com.ejdoab.tcms.entities.AddressLocal address);

   /**
    * This is a uni-directional one-to-many relationship CMR method
    *
    * @return a java.util.Collection of related com.ejdoab.tcms.entities.AnswerLocal.
    * middlegen.plugins.entitybean.Entity20Table@1fa490e
    * class middlegen.plugins.entitybean.Entity20Table
    * middlegen.plugins.entitybean.Entity20Table
    * @ejb.interface-method view-type="local"
    *
    * @ejb.relation
    *    name="USERS-cmp20-ANSWERS-cmp20"
    *    role-name="USERS-cmp20-has-ANSWERS-cmp20"
    *    target-ejb="Answer"
    *    target-role-name="ANSWERS-cmp20-has-USERS-cmp20"
    *    target-multiple="no"
    *
    * @jboss.relation-mapping style="foreign-key"
    *
    * @weblogic.target-column-map
    *    foreign-key-column="FK_USERID"
    *    key-column="PK_ID"
    *
    * @jboss.target-relation
    *    fk-constraint="true"
    *    fk-column="FK_USERID"
    *    related-pk-field="id"
    *
    */
   public abstract java.util.Collection getAnswers();

   /**
    * Sets a collection of related com.ejdoab.tcms.entities.AnswerLocal
    *
    * @param a collection of related com.ejdoab.tcms.entities.AnswerLocal
    *
    * @ejb.interface-method view-type="local"
    *
    * @param answers the new CMR value
    */
   public abstract void setAnswers(java.util.Collection answers);

   /**
    * This is a bi-directional one-to-many relationship CMR method
    *
    * @return a java.util.Collection of related com.ejdoab.tcms.entities.UserRoleLocal.
    * middlegen.plugins.entitybean.Entity20Table@1d29a78
    * class middlegen.plugins.entitybean.Entity20Table
    * middlegen.plugins.entitybean.Entity20Table
    * @ejb.interface-method view-type="local"
    *
    * @ejb.relation
    *    name="USERS-cmp20-USERROLES-cmp20"
    *    role-name="USERS-cmp20-has-USERROLES-cmp20"
    *
    * @jboss.relation-mapping style="foreign-key"
    *
    */
   public abstract java.util.Collection getUserRoles();

   /**
    * Sets a collection of related com.ejdoab.tcms.entities.UserRoleLocal
    *
    * @param a collection of related com.ejdoab.tcms.entities.UserRoleLocal
    *
    * @ejb.interface-method view-type="local"
    *
    * @param userRoles the new CMR value
    */
   public abstract void setUserRoles(java.util.Collection userRoles);

   /**
    * This is a uni-directional one-to-many relationship CMR method
    *
    * @return a java.util.Collection of related com.ejdoab.tcms.entities.ReminderLocal.
    * middlegen.plugins.entitybean.Entity20Table@19b6225
    * class middlegen.plugins.entitybean.Entity20Table
    * middlegen.plugins.entitybean.Entity20Table
    * @ejb.interface-method view-type="local"
    *
    * @ejb.relation
    *    name="USERS-cmp20-REMINDERS-cmp20"
    *    role-name="USERS-cmp20-has-REMINDERS-cmp20"
    *    target-ejb="Reminder"
    *    target-role-name="REMINDERS-cmp20-has-USERS-cmp20"
    *    target-multiple="no"
    *
    * @jboss.relation-mapping style="foreign-key"
    *
    * @weblogic.target-column-map
    *    foreign-key-column="FK_USERID"
    *    key-column="PK_ID"
    *
    * @jboss.target-relation
    *    fk-constraint="true"
    *    fk-column="FK_USERID"
    *    related-pk-field="id"
    *
    */
   public abstract java.util.Collection getReminders();

   /**
    * Sets a collection of related com.ejdoab.tcms.entities.ReminderLocal
    *
    * @param a collection of related com.ejdoab.tcms.entities.ReminderLocal
    *
    * @ejb.interface-method view-type="local"
    *
    * @param reminders the new CMR value
    */
   public abstract void setReminders(java.util.Collection reminders);

   /**
    * This is a bi-directional one-to-one relationship CMR method
    *
    * @return the related com.ejdoab.tcms.entities.PresenterLocal.
    *
    * @ejb.interface-method view-type="local"
    *
    * @ejb.relation
    *    name="USERS-cmp20-PRESENTERS-cmp20"
    *    role-name="USERS-cmp20-has-PRESENTERS-cmp20"
    *
    * @jboss.relation-mapping style="foreign-key"
    *
    */
   public abstract com.ejdoab.tcms.entities.PresenterLocal getPresenter();

   /**
    * Sets the related com.ejdoab.tcms.entities.PresenterLocal
    *
    * @param com.ejdoab.tcms.entities.UserLocal the related $target.variableName
    *
    * @ejb.interface-method view-type="local"
    *
    * @param presenter the new CMR value
    */
   public abstract void setPresenter(com.ejdoab.tcms.entities.PresenterLocal presenter);

   /**
    * This is a bi-directional one-to-one relationship CMR method
    *
    * @return the related com.ejdoab.tcms.entities.AttendeeLocal.
    *
    * @ejb.interface-method view-type="local"
    *
    * @ejb.relation
    *    name="USERS-cmp20-ATTENDEES-cmp20"
    *    role-name="USERS-cmp20-has-ATTENDEES-cmp20"
    *
    * @jboss.relation-mapping style="foreign-key"
    *
    */
   public abstract com.ejdoab.tcms.entities.AttendeeLocal getAttendee();

   /**
    * Sets the related com.ejdoab.tcms.entities.AttendeeLocal
    *
    * @param com.ejdoab.tcms.entities.UserLocal the related $target.variableName
    *
    * @ejb.interface-method view-type="local"
    *
    * @param attendee the new CMR value
    */
   public abstract void setAttendee(com.ejdoab.tcms.entities.AttendeeLocal attendee);

   /**
    * This is a bi-directional one-to-many relationship CMR method
    *
    * @return a java.util.Collection of related com.ejdoab.tcms.entities.ScheduleEntryLocal.
    * middlegen.plugins.entitybean.Entity20Table@1e88b35
    * class middlegen.plugins.entitybean.Entity20Table
    * middlegen.plugins.entitybean.Entity20Table
    * @ejb.interface-method view-type="local"
    *
    * @ejb.relation
    *    name="USERS-cmp20-SCHEDULEENTRIES-cmp20"
    *    role-name="USERS-cmp20-has-SCHEDULEENTRIES-cmp20"
    *
    * @jboss.relation-mapping style="foreign-key"
    *
    */
   public abstract java.util.Collection getScheduleEntries();

   /**
    * Sets a collection of related com.ejdoab.tcms.entities.ScheduleEntryLocal
    *
    * @param a collection of related com.ejdoab.tcms.entities.ScheduleEntryLocal
    *
    * @ejb.interface-method view-type="local"
    *
    * @param scheduleEntries the new CMR value
    */
   public abstract void setScheduleEntries(java.util.Collection scheduleEntries);

   /**
    * This create method takes only mandatory (non-nullable) parameters.
    *
    * When the client invokes a create method, the EJB container invokes the ejbCreate method. 
    * Typically, an ejbCreate method in an entity bean performs the following tasks: 
    * <UL>
    * <LI>Inserts the entity state into the database.</LI>
    * <LI>Initializes the instance variables.</LI>
    * <LI>Returns the primary key.</LI>
    * </UL>
    *
    * @return the primary key of the new instance
    *
    * @ejb.create-method
    */
   public java.lang.Integer ejbCreate(  ) throws javax.ejb.CreateException {
      // Use Middlegen's Sequence Block PK generator. Only works for numeric fields
      try {
         com.ejdoab.tcms.entities.SequenceSessionLocal sequenceGenerator = 
         com.ejdoab.tcms.entities.SequenceSessionUtil.getLocalHome().create();      
         setId(new java.lang.Integer(sequenceGenerator.getNextSequenceNumber( "USERS.PK_ID" )));
      } catch( javax.naming.NamingException e ) {
         throw new javax.ejb.CreateException(e.getMessage());
      }
      // Use XDoclet's GUID generator. Only works for String fields
      // This requires <utilobject includeGUID="true"/> in ejbdoclet.

      // Set CMP fields
      // EJB 2.0 spec says return null for CMP ejbCreate methods.
      return null;
   }

   /**
    * The container invokes thos method immediately after it calls ejbCreate. 
    *
    */
   public void ejbPostCreate(  ) throws javax.ejb.CreateException {
      // Set CMR fields
   }

   /**
    * This create method takes all parameters (both nullable and not nullable). 
    *
    * When the client invokes a create method, the EJB container invokes the ejbCreate method. 
    * Typically, an ejbCreate method in an entity bean performs the following tasks: 
    * <UL>
    * <LI>Inserts the entity state into the database.</LI>
    * <LI>Initializes the instance variables.</LI>
    * <LI>Returns the primary key.</LI>
    * </UL>
    *
    * @param password the password value
    * @param firstName the firstName value
    * @param lastName the lastName value
    * @param email the email value
    * @param homePhone the homePhone value
    * @param workPhone the workPhone value
    * @param fax the fax value
    * @param address CMR field
    * @param presenter CMR field
    * @param attendee CMR field
    * @return the primary key of the new instance
    *
    * @ejb.create-method
    */
   public java.lang.Integer ejbCreate( java.lang.String password, java.lang.String firstName, java.lang.String lastName, java.lang.String email, java.lang.String homePhone, java.lang.String workPhone, java.lang.String fax, com.ejdoab.tcms.entities.AddressLocal address, com.ejdoab.tcms.entities.PresenterLocal presenter, com.ejdoab.tcms.entities.AttendeeLocal attendee ) throws javax.ejb.CreateException {
      // Use Middlegen's Sequence Block PK generator. Only works for numeric fields
      try {
         com.ejdoab.tcms.entities.SequenceSessionLocal sequenceGenerator = 
         com.ejdoab.tcms.entities.SequenceSessionUtil.getLocalHome().create();      
         setId(new java.lang.Integer(sequenceGenerator.getNextSequenceNumber( "USERS.PK_ID" )));
      } catch( javax.naming.NamingException e ) {
         throw new javax.ejb.CreateException(e.getMessage());
      }
      // Use XDoclet's GUID generator. Only works for String fields
      // This requires <utilobject includeGUID="true"/> in ejbdoclet.

      // Set CMP fields
      setPassword(password);
      setFirstName(firstName);
      setLastName(lastName);
      setEmail(email);
      setHomePhone(homePhone);
      setWorkPhone(workPhone);
      setFax(fax);
      // EJB 2.0 spec says return null for CMP ejbCreate methods.
      return null;
   }

   /**
    * The container invokes thos method immediately after it calls ejbCreate. 
    *
    * @param password the password value
    * @param firstName the firstName value
    * @param lastName the lastName value
    * @param email the email value
    * @param homePhone the homePhone value
    * @param workPhone the workPhone value
    * @param fax the fax value
    * @param address CMR field
    * @param presenter CMR field
    * @param attendee CMR field
    */
   public void ejbPostCreate( java.lang.String password, java.lang.String firstName, java.lang.String lastName, java.lang.String email, java.lang.String homePhone, java.lang.String workPhone, java.lang.String fax, com.ejdoab.tcms.entities.AddressLocal address, com.ejdoab.tcms.entities.PresenterLocal presenter, com.ejdoab.tcms.entities.AttendeeLocal attendee ) throws javax.ejb.CreateException {
      // Set CMR fields
      setAddress(address);
      setPresenter(presenter);
      setAttendee(attendee);
   }

     
   // No C:\tcms\src\middlegen\merge/cmp20-users-class-code.txt found.

}
